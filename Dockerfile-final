# ----------- Builder Stage ------------
FROM eclipse-temurin:17-jdk-jammy AS builder

# Set the working directory in the container
WORKDIR /app

# Copy Maven wrapper and configuration files first (to leverage Docker cache)
COPY mvnw .
COPY .mvn .mvn
COPY pom.xml .

# Make sure mvnw is executable and remove the local Maven repository cache
RUN chmod +x mvnw && rm -rf /root/.m2/repository

# Download dependencies and build the application (offline mode)
RUN ./mvnw dependency:go-offline -B

# Copy the source code and build the application (skip tests for faster builds)
COPY src src
RUN ./mvnw package -DskipTests

# ----------- Runtime Stage ------------
FROM eclipse-temurin:17-jre-jammy

# Set the working directory in the container
WORKDIR /app

# Create a non-root user and group for security (no need for shell)
RUN addgroup --system appgroup && adduser --system appuser --ingroup appgroup

# Switch to non-root user
USER appuser

# Copy the jar from the builder stage
COPY --from=builder /app/target/*.jar app.jar

# Expose the port the app will run on
EXPOSE 8080

# Start the application using the JAR file
ENTRYPOINT ["java", "-jar", "app.jar"]
